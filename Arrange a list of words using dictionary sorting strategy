PROBLEM STATEMENT:
Arrange a list of words (each of equal length) using dictionary sorting strategy.

ALGORITHM
1. radixSort(arr) 
2. max = largest element in the given array 
3. d = number of digits in the largest element (or, max) 
4. Now, create d buckets of size 0 - 9 
5. for i -> 0 to d 
6. sort the array elements using counting sort (or any stable sort) according to the digits at 
7. the ith place

CODE:
#include <stdio.h>
#include <string.h>
int main() {
 char str[5][50], temp[50];
 printf("Enter 5 words: ");
 for (int i = 0; i < 5; ++i) {
 fgets(str[i], sizeof(str[i]), stdin);
 }
 for (int i = 0; i < 5; ++i) {
 for (int j = i + 1; j < 5; ++j) {
 
 if (strcmp(str[i], str[j]) > 0) {
 strcpy(temp, str[i]);
 strcpy(str[i], str[j]);
 strcpy(str[j], temp);
 }
 }
 }
 printf("\nIn the lexicographical order: \n");
 for (int i = 0; i < 5; ++i) {
 fputs(str[i], stdout);
 }
 return 0;
}
